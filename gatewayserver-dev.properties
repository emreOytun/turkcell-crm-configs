server.port=8001

eureka.client.serviceUrl.defaultZone=http://localhost:8888/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

eureka.url=http://localhost:8888

# Customerservice route with CircuitBreaker
spring.cloud.gateway.routes[0].id=customerservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/customers/**
spring.cloud.gateway.routes[0].uri=lb://customerservice
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/customers
spring.cloud.gateway.routes[0].filters[0].args.name=customCircuitBreaker

# Orderservice route with CircuitBreaker
spring.cloud.gateway.routes[1].id=orderservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/orders/**
spring.cloud.gateway.routes[1].uri=lb://orderservice
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/orders
spring.cloud.gateway.routes[0].filters[0].args.name=orderCircuitBreaker

# Productservice route with CircuitBreaker
spring.cloud.gateway.routes[2].id=productservice
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/products/**
spring.cloud.gateway.routes[2].uri=lb://productservice
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/products
spring.cloud.gateway.routes[0].filters[0].args.name=productCircuitBreaker

# Invoiceservice route with CircuitBreaker
spring.cloud.gateway.routes[3].id=invoiceservice
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/invoices/**
spring.cloud.gateway.routes[3].uri=lb://invoiceservice
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/invoices
spring.cloud.gateway.routes[0].filters[0].args.name=invoiceCircuitBreaker

# Eureka discovery server route
spring.cloud.gateway.routes[4].id=discoveryserver
spring.cloud.gateway.routes[4].predicates[0]=Path=/eureka/web
spring.cloud.gateway.routes[4].filters[0]=SetPath=/
spring.cloud.gateway.routes[4].uri=${eureka.url}

# Static Eureka discovery server route
spring.cloud.gateway.routes[5].id=discoveryserver-static
spring.cloud.gateway.routes[5].predicates[0]=Path=/eureka/**
spring.cloud.gateway.routes[5].uri=${eureka.url}

# Authservice route with CircuitBreaker
spring.cloud.gateway.routes[6].id=authservice
spring.cloud.gateway.routes[6].predicates[0]=Path=/api/v1/auth/**
spring.cloud.gateway.routes[6].uri=lb://authservice
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/auth
spring.cloud.gateway.routes[0].filters[0].args.name=authCircuitBreaker

# Resilience4J Circuit Breaker configuration for customerCircuitBreaker
resilience4j.circuitbreaker.instances.customCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.customCircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.customCircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.customCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.customCircuitBreaker.waitDurationInOpenState=10000
